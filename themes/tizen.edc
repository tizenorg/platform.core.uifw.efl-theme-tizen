/*
 * efl-theme-tizen
 * Copyright (c) 2012-2013 Samsung Electronics Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



// LICENSE NOTE:
// This file (and only this one) is licenses under public-domain. The reason
// is that this is meant to serve as a template for making your own themes and
// Elementary's LGPL license is not intended to follow. The images used do come
// under LGPL, but this file specifically for the structure of your theme is
// public-domain. This means you can take, use, re-license and otherwise
// have zero restrictions on using this file as a base for your theme.

// theme configuration file for each theme (tizen, tizen-black, ...)
#include TIZEN_TMP_INC

#define INDICATOR_H		27
#define CONTROLBAR_LARGE_H		78
#define CONTROLBAR_SMALL_H		65
#define CONTROLBAR_W			78
#define SOFTKEY_H		72
#define SEGMENT_H		50
#define PART_RECT(NAME, REFER_PART, COLOR) \
   part { name: NAME; \
      type: RECT; \
      description { state: "default" 0.0; \
         rel1.to: REFER_PART; \
         rel2.to: REFER_PART; \
         color: COLOR; \
      } \
   }

externals {
   external: "elm";
}

data.item: "version" "110";

collections {
   sounds {
      sample {
         name: "touch_sound" RAW;
         source: "Tizen_Touch.wav";
      }
   }
   sounds {
      sample {
         name: "sweep_sound" RAW;
         source: "Slider_sweep.wav";
      }
   }
   sounds {
      sample {
         name: "reorder_sound" RAW;
         source: "List_reorder.wav";
      }
   }
#include "widgets/access.edc"
#include "widgets/badge.edc"
#include "widgets/bg.edc"
#include "widgets/bubble.edc"
#include "widgets/button.edc"
#include "widgets/check.edc"
#include "widgets/colorselector.edc"
#include "widgets/conformant.edc"
#include "widgets/ctxpopup.edc"
#include "widgets/datetime.edc"
#include "widgets/diskselector.edc"
#include "widgets/entry.edc"
#include "widgets/gengrid.edc"
#include "widgets/scroller.edc"
#include "widgets/genlist/genlist.edc" // include scroller first
#include "widgets/index.edc"
#include "widgets/label.edc"
#include "widgets/layout.edc"
#include "widgets/map.edc"
#include "widgets/multibuttonentry.edc"
#include "widgets/naviframe.edc"
#include "widgets/notify.edc"
#include "widgets/panes.edc"
#include "widgets/photocam.edc"
#include "widgets/popup.edc"
#include "widgets/progressbar.edc"
#include "widgets/radio.edc"
#include "widgets/segmentedcontrol.edc"
#include "widgets/selectioninfo.edc"
#include "widgets/slider.edc"
#include "widgets/tickernoti.edc"
#include "widgets/toolbar.edc"


   group { name: "elm/focus_highlight/top/default";
      images {
         image: "00_focus.png" COMP;
      }
      data {
         item: "animate" "off";
      }
      parts {
         part { name: "base";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
               visible: 0;
            }
         }
         part { name: "shine";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.offset: -4 -4;
               rel2.offset: 4 4;
               image {
                  normal: "00_focus.png";
                  border: 7 7 7 7;
                  border_scale: 1;
               }
            }
            description { state: "show" 0.0;
               inherit:  "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "show";
            signal: "elm,action,focus,show";
            source: "elm";
            action: STATE_SET "show" 0.0;
            target: "shine";
            after: "show_end";
         }
         program { name: "show_end";
            action: SIGNAL_EMIT "elm,action,focus,show,end" "";
         }
         program { name: "hide";
            signal: "elm,action,focus,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "shine";
            after: "hide_end";
         }
         program { name: "hide_end";
            action: SIGNAL_EMIT "elm,action,focus,hide,end" "";
         }
      }
   }
}

